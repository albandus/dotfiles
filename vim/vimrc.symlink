" vim config file , built on 2020-01-17

" auto install vim-plug
" source: https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" NERDTree =========================================================
" https://github.com/preservim/nerdtree
Plug 'preservim/nerdtree'
" https://github.com/Xuyuanp/nerdtree-git-plugin
Plug 'Xuyuanp/nerdtree-git-plugin'

" https://github.com/fatih/vim-go
Plug 'fatih/vim-go', { 'tag': '*', 'do': ':GoInstallBinaries' }

" Split & join (gs / gJ to split structs)
" https://github.com/AndrewRadev/splitjoin.vim
Plug 'AndrewRadev/splitjoin.vim'

" https://github.com/ntpeters/vim-better-whitespace
" Highlight whitespace chars. Provide function :StripWhitespace
Plug 'ntpeters/vim-better-whitespace'

" https://github.com/plasticboy/vim-markdown
Plug 'plasticboy/vim-markdown'

" https://github.com/vim-syntastic/syntastic
Plug 'vim-syntastic/syntastic'

" https://github.com/preservim/nerdcommenter
Plug 'preservim/nerdcommenter'

" https://github.com/dhruvasagar/vim-table-mode
Plug 'dhruvasagar/vim-table-mode'

" https://github.com/junegunn/fzf.vim
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Color themes
Plug 'fatih/molokai'
" https://github.com/dracula/vim
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'trapd00r/neverland-vim-theme'

" vim-airline
" https://github.com/vim-airline/vim-airline
Plug 'vim-airline/vim-airline'
" Automatically displays all buffers when there's only one tab open.
let g:airline#extensions#tabline#enabled = 1

" Deoplete Completion
" https://github.com/Shougo/deoplete.nvim
" Require on system: pip3 install pynvim
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
let g:deoplete#enable_at_startup = 1

" Golang-related deoplete features.
Plug 'deoplete-plugins/deoplete-go', { 'do': 'make'}
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#builtin_objects = 1
let g:deoplete#sources#go#unimported_packages = 1
let g:deoplete#sources#go#pointer = 1

call plug#end()

let mapleader = ","

" Delay the completion after input in milliseconds, default value: 0
call deoplete#custom#option('auto_complete_delay', 200)
map <leader>d :call deoplete#toggle()<CR>

" NERDTree shortcuts
map <C-n> :NERDTreeFocus<CR>
" why this in old vimrc file? map <silent> <C-n> :NERDTreeFocus<cr>
" Unmap c (not using it and can delete lines when using nerdcommenter)
map c <Nop>

" FZF shortcut
map <C-p> :FZF<CR>

" quick access to global buffer
noremap <leader>y "+y
noremap <leader>p "+p

" Avoid folding by default
set foldlevelstart=99
" useless? let g:vim_markdown_folding_disabled = 1

" searches to middle of the screen
nnoremap n nzz
nnoremap N Nzz

" textwidth & reformat
nnoremap <leader>w :set tw=80<CR>gqip:set tw=0<CR>
vnoremap <leader>w :<backspace><backspace><backspace><backspace><backspace>set tw=80<CR>gvgq:set tw=0<CR>

"" Searching
set hlsearch   " highlight matches
set incsearch  " incremental searching
set ignorecase " searches are case insensitive...
set smartcase  " ... unless they contain at least one capital letter

" persistent undo
set undodir=~/.vim/undodir
set undofile

" True colors, not only 8 bits
set termguicolors

" Ruler bar on
set ruler

" My custom "bash" syntax
if exists("*SetFileTypeSH")
  " Custom syntax file associations
  au BufNewFile,BufRead .bashrc*,bashrc,bash_*,.bash_*, call SetFileTypeSH("bash")
endif

" Make the post-search window usable again!
nnoremap <C-l> :nohlsearch<CR>
" Go fuck yourself Ex mode.
map Q <Nop>

set nowrap
set backspace=indent,eol,start
set tabstop=4
set shiftwidth=4
set softtabstop=4
set ul=500
set expandtab
set number
" backspace in cmd mod
nnoremap <bs> X

" Syntastic go
let g:go_fmt_command = "goimports"
let g:go_list_type = "quickfix"
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_variable_declarations = 1
let g:go_highlight_variable_assignments = 1
let g:syntastic_go_checkers = ['vet', 'golint', 'errcheck']
let g:go_auto_type_info = 0

" Theme
colorscheme neverland-darker

" Prevent any unwanted initiative...
set background=dark

" Improve rendering and copy paste?
set lazyredraw
set ttyfast

